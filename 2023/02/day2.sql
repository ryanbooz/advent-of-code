create table dec02 (
	id integer generated by default as identity,
	lines text
);

\COPY dec02(lines) FROM input.txt NULL '';

/*
 * First Star
 * 
 * Game 1: 3 blue, 4 red; 1 red, 2 green, 6 blue; 2 green
 */
WITH game_sets AS (
	SELECT id AS game, 
		regexp_split_to_table(lines, ';') game_set
		FROM dec02
),
set_values AS (
	SELECT game,
		regexp_match(game_set, '(\d+) green') AS green,
		regexp_match(game_set, '(\d+) red') AS red,
		regexp_match(game_set, '(\d+) blue') AS blue
	FROM game_sets
),
valid_games AS (
	SELECT game,
	CASE WHEN red[1]::int > 12 THEN FALSE
		WHEN green[1]::int > 13 THEN FALSE
		WHEN blue[1]::int > 14 THEN FALSE
		ELSE TRUE END valid_game
	FROM set_values
) 
SELECT sum(DISTINCT game)
FROM valid_games
WHERE game NOT IN (SELECT game FROM valid_games WHERE valid_game IS false);


/*
 * Second star
 */
WITH game_sets AS (
	SELECT id AS game, 
		regexp_split_to_table(lines, ';') game_set
		FROM dec02
),
set_values AS (
	SELECT game,
		regexp_match(game_set, '(\d+) green') AS green,
		regexp_match(game_set, '(\d+) red') AS red,
		regexp_match(game_set, '(\d+) blue') AS blue
	FROM game_sets
),
game_max AS (
	SELECT DISTINCT game, 
		max(red[1]::int) OVER (PARTITION BY game) AS max_red,
		max(green[1]::int) OVER (PARTITION BY game) AS max_green,
		max(blue[1]::int) OVER (PARTITION BY game) AS max_blue	
	FROM set_values
)
SELECT sum(max_red * max_green * max_blue) AS power 
FROM game_max;
