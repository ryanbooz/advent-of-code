create table dec01 (
	id integer generated by default as identity,
	lines text
);

\COPY dec01(lines) FROM input.txt NULL '';


/*
 * First Star
 */
WITH digits AS (
	SELECT (regexp_match(lines, '(\d)'))[1] AS d1,
		(regexp_match(reverse(lines), '(\d)'))[1] AS d2
	FROM dec01
)
SELECT sum((d1 || d2)::int) FROM digits;


/*
 * Second star
 */
-- Did this just to get the reverse of the string for the second digit
--SELECT reverse('one|two|three|four|five|six|seven|eight|nine');


WITH digit_conversion(digit,word) AS (
	VALUES('1','one'),
		('2','two'),
		('3','three'),
		('4','four'),
		('5','five'),
		('6','six'),
		('7','seven'),
		('8','eight'),
		('9','nine')
),
digits AS (
	SELECT id, (regexp_match(lines, '(\d|one|two|three|four|five|six|seven|eight|nine)'))[1] AS d1,
		reverse((regexp_match(reverse(lines), '(\d|enin|thgie|neves|xis|evif|ruof|eerht|owt|eno)'))[1]) AS d2
	FROM dec01
),
final_digits AS (
	SELECT d.id, COALESCE(dc1.digit,d.d1) d_left, COALESCE(dc2.digit, d.d2) d_right FROM digits d
		LEFT JOIN digit_conversion dc1 ON d.d1 = dc1.word
		LEFT JOIN digit_conversion dc2 ON d.d2 = dc2.word
)
SELECT sum((d_left || d_right)::int) FROM final_digits;



